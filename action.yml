name: "Setup NodeJS Environment"
description: "Installs NodeJS, checks out, installs dependencies"
inputs:
  token:
    description: "Github personal access token"
    required: true
  fetch-depth:
    description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
    default: 1
  node-version:
    description: "NodeJS version"
    required: false
    default: "20.18.3"
  cache:
    description: "Enable or disable caching"
    required: false
    default: "true"
  cache-key:
    description: "Unique cache key"
    required: false
    default: ""
  install-deps:
    description: "Install dependencies"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: 'https://npm.pkg.github.com'

    - name: Display versions
      if: ${{ inputs.install-deps == 'true' }}
      run: |
        echo -e "\033[36mNodeJS version: \033[39m $(node -v)"
        node -v
        echo -e "\033[36mNpm version: \033[39m $(npm -v)"
        npm -v
      shell: bash

    - name: Create .npmrc File for Github Packages
      run: |
        NPMRC_FILE="$GITHUB_WORKSPACE/.npmrc"
        echo "NPMRC_FILE=$NPMRC_FILE" >> $GITHUB_ENV
        echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" >> "$NPMRC_FILE"
        echo "//npm.pkg.github.com/:_authToken=${{ inputs.token }}" >> "$NPMRC_FILE"
      shell: bash

    - name: Cache Node Modules
      if: ${{ inputs.cache == 'true' }}
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-node-modules-${{ inputs.cache-key }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-${{ inputs.cache-key }}-

    - name: Install dependencies
      if: ${{ inputs.install-deps == 'true' }}
      run: |
        npm install --no-save
        npm i rman -g
      shell: bash

    - name: Install rman
      if: ${{ inputs.install-deps == 'true' }}
      run: |
        npm i rman -g
        echo -e "\033[36mrman version \033[39m"
        rman -v
      shell: bash



